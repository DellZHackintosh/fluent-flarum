@header-bg-light: average(average(average(@config-primary-color, @layer-1-color), @layer-1-color), @layer-1-color);
@header-bg-dark: darken(average(average(@config-primary-color, @layer-1-color), @layer-1-color), 10%);
.define-colors(@config-dark-mode);
.define-colors(false) {
	@body-bg: average(average(average(average(average(@config-primary-color, @layer-2-color), @layer-2-color), @layer-2-color), @layer-2-color), @layer-2-color);
	@Switch-border-color: @Fluent-border;
	@layer-1-color: #f3f3f3;
	@layer-2-color: #f9f9f9;
	@layer-3-color: #fdfdfd;
	@obj-color: average(average(average(average(average(average(#fbfbfb, @config-primary-color), #fbfbfb), #fbfbfb), #fbfbfb), #fbfbfb), #fbfbfb);
	@obj-title-color: #191a1a;
	@Fluent-border: #e5e5e5;
	@details-second-font-color: #5e5e5e;
	@titlebar-bg: @header-bg-light;
	@Switch-button-color: #ffffff;
	@button-border: linear-gradient(#e5e5e5 90%, #ccc 100%);
}
.define-colors(true) {
	@body-bg: average(average(average(average(@config-primary-color, @layer-2-color), @layer-2-color), @layer-2-color), @layer-2-color);
	@layer-1-color: #202020;
	@layer-2-color: #272727;
	@layer-3-color: #323232;
	@obj-color: lighten(average(average(average(average(#2b2b2b, @config-primary-color), #2b2b2b), #2b2b2b), #2b2b2b), 5%);
	@obj-title-color: white;
	@Fluent-border: #1d1d1d;
	@details-second-font-color: #cfcfcf;
	@titlebar-bg: @header-bg-dark;
	@Switch-button-color: #2d2d2d;
	@button-border: linear-gradient(#303030, #303030);
}
.define-header(@config-colored-header);
.define-header(false) {
	@header-bg: @titlebar-bg;
}

.shadow2 {
	& when (@config-dark-mode =false) {
		--low-elevation-ramp: 0px 0.5 * @elevation-height 1 * @elevation-height 0px fade(#000, 14%),
			0px 0.5 * @elevation-height 1 * @elevation-height 0 fade(#000, 14%);
	}

	& when (@config-dark-mode =true) {
		--low-elevation-ramp: 0px 0.5 * @elevation-height 1 * @elevation-height 0px fade(#000, 28%),
			0px 0.5 * @elevation-height 1 * @elevation-height 0px fade(#000, 14%);
	}

	@elevation-height: 2px;
	box-shadow: var(--low-elevation-ramp);
}

.shadow4 {
	& when (@config-dark-mode =false) {
		--low-elevation-ramp: 0px 0.5 * @elevation-height 1 * @elevation-height 0px fade(#000, 14%),
			0px 0.5 * @elevation-height 1 * @elevation-height 0 fade(#000, 14%);
	}

	& when (@config-dark-mode =true) {
		--low-elevation-ramp: 0px 0.5 * @elevation-height 1 * @elevation-height 0px fade(#000, 28%),
			0px 0.5 * @elevation-height 1 * @elevation-height 0px fade(#000, 14%);
	}

	@elevation-height: 4px;
	box-shadow: var(--low-elevation-ramp);
}

.shadow8 {
	& when (@config-dark-mode =false) {
		--low-elevation-ramp: 0px 0.5 * @elevation-height 1 * @elevation-height 0px fade(#000, 14%),
			0px 0.5 * @elevation-height 1 * @elevation-height 0 fade(#000, 14%);
	}

	& when (@config-dark-mode =true) {
		--low-elevation-ramp: 0px 0.5 * @elevation-height 1 * @elevation-height 0px fade(#000, 28%),
			0px 0.5 * @elevation-height 1 * @elevation-height 0px fade(#000, 14%);
	}

	@elevation-height: 8px;
	box-shadow: var(--low-elevation-ramp);
}

.shadow16 {
	& when (@config-dark-mode =false) {
		--low-elevation-ramp: 0px 0.5 * @elevation-height 1 * @elevation-height 0px fade(#000, 14%),
			0px 0.5 * @elevation-height 1 * @elevation-height 0 fade(#000, 14%);
	}

	& when (@config-dark-mode =true) {
		--low-elevation-ramp: 0px 0.5 * @elevation-height 1 * @elevation-height 0px fade(#000, 28%),
			0px 0.5 * @elevation-height 1 * @elevation-height 0px fade(#000, 14%);
	}

	@elevation-height: 16px;
	box-shadow: var(--low-elevation-ramp);
}

.shadow28 {
	& when (@config-dark-mode =false) {
		--high-elevation-ramp: 0px 0.5 * @elevation-height 1 * @elevation-height 0px fade(#000, 24%),
			0px 0px 8px 0px fade(#000, 20%);
	}

	& when (@config-dark-mode =true) {
		--high-elevation-ramp: 0px 0.5 * @elevation-height 1 * @elevation-height 0px fade(#000, 28%),
			0px 0px 2px 0px fade(#000, 20%);
	}

	@elevation-height: 28px;
	box-shadow: var(--high-elevation-ramp);
}

.shadow64 {
	& when (@config-dark-mode =false) {
		--high-elevation-ramp: 0px 0.5 * @elevation-height 1 * @elevation-height 0px fade(#000, 24%),
			0px 0px 8px 0px fade(#000, 20%);
	}

	& when (@config-dark-mode =true) {
		--high-elevation-ramp: 0px 0.5 * @elevation-height 1 * @elevation-height 0px fade(#000, 28%),
			0px 0px 2px 0px fade(#000, 20%);
	}

	@elevation-height: 64px;
	box-shadow: var(--high-elevation-ramp);
}

:root {
	--accent-color: var(--primary-color);
	--button-bg: @obj-color;
	--button-bg-hover: fade(#999, 10%);
	& when (@config-dark-mode = false) {
		--discussion-list-item-bg-hover: lighten(@obj-color, 1%);
	}
	& when (@config-dark-mode = true) {
		--discussion-list-item-bg-hover: lighten(@obj-color, 2%);
	}
	& when (@config-colored-header = false) {
		--colored-titlebar: false;
	}
	& when (@config-colored-header = true) {
		--colored-titlebar: true;
	}
}

body {
	overflow-y: auto;
}

.scrolled .App-header, .scrolled .App-navigation {
	box-shadow: none;
}

.App-content {
	border-top: 1px solid @Fluent-border;
}

.Button:not(.Button--flat, .App-header .Button, .App-header .Button:hover, .UserCard .Button, .UserCard .Button:hover, .Button--primary, .Button--link) {
	border: 1px solid transparent;
	box-shadow: 0px 0.3px ~"rgb(111 111 111 / 60%)";
	background: padding-box linear-gradient(@Switch-button-color, @Switch-button-color), border-box @button-border, border-box @Switch-button-color;
}

button.Button.Button--primary {
	& when (@config-dark-mode =false) {
		background: padding-box linear-gradient(var(--button-bg), var(--button-bg)), border-box linear-gradient(fade(#fff, 25%) 90%, fade(#000, 25%) 100%), border-box var(--button-bg);
	}

	& when (@config-dark-mode =true) {
		background: padding-box linear-gradient(var(--button-bg), var(--button-bg)), border-box linear-gradient(fade(#fff, 10%) 90%, fade(#000, 10%) 100%), border-box var(--button-bg);
	}
	border: 1px solid transparent;
}

.Button:not(.Button--flat, .App-header .Button, .App-header .Button:hover, .UserCard .Button, .UserCard .Button:hover):active {
	background: var(--button-bg);
	border: 1px solid fade(#fff, 13%);
}

.Select>.Select-input {
	& when (@config-dark-mode =false) {
		background: padding-box linear-gradient(var(--control-bg), var(--control-bg)), border-box linear-gradient(fade(#fff, 25%) 90%, fade(#000, 25%) 100%), border-box var(--control-bg);
	}

	& when (@config-dark-mode =true) {
		background: padding-box linear-gradient(var(--control-bg), var(--control-bg)), border-box linear-gradient(fade(#fff, 10%) 90%, fade(#000, 10%) 100%), border-box var(--control-bg);
	}
	border: 1px solid transparent;
}

.Select>.Select-input:focus {
	background: padding-box linear-gradient(var(--primary-color), var(--primary-color)), border-box linear-gradient(fade(#fff, 25%) 90%, fade(#000, 25%) 100%), border-box var(--primary-color);
}

div.PostUser-bar--empty {
	background: url("data:image/svg+xml,%3Csvg viewBox='0 0 0.26458335 0.79375005' version='1.1' id='svg5' xmlns='http://www.w3.org/2000/svg' xmlns:svg='http://www.w3.org/2000/svg'%3E%3Cdefs id='defs2'/%3E%3Cg id='layer1'%3E%3Crect style='fill:%238d8d8d;fill-opacity:1;stroke:none;stroke-width:0;stroke-miterlimit:10' id='rect31' width='0.26458335' height='0.26458335' x='0' y='0.26458335'/%3E%3C/g%3E%3C/svg%3E");
}

.PostUser-bar {
	height: 3px;
}

.Dropdown-menu {
	.shadow28();
	padding: 0;
	border: 1px solid @Fluent-border;
	border-radius: 8px;
}

.Dropdown-menu>li {
	margin: 8px;
}

.Dropdown-menu>li>a, .Dropdown-menu>li>button {
	border-radius: 4px;
}

.Dropdown-menu>li>a:hover, .Dropdown-menu>li>button:hover {
	background: var(--button-bg-hover);
}

button.Button, select.FormControl, fieldset.Settings-notifications td, #header a.Button {
	font-size: 14px;
}

fieldset>legend, .SettingsPage label {
	& when (@config-dark-mode = false) {
		color: black;
	}
	& when (@config-dark-mode = true) {
		color: white;
	}
	font-size: 14px;
	font-weight: normal;
}

p.description, p.Settings-theme--selection_description {
	color: @details-second-font-color;
}

.SettingsPage>ul>li {
	border: 1px solid @Fluent-border;
	border-radius: 4px;
	background-color: @obj-color;
	margin-bottom: 12px;
	padding: 16px;
}

.Button:active,
.Button.active,
.open>.Button.Dropdown-toggle {
	box-shadow: unset;
}

.Hero {
	margin: 12px;
	border-radius: 8px;
	.shadow8();
}

.darkenBackground {
	border-radius: 8px;
}

.Modal {
	border: 1px solid @Fluent-border;
	border-radius: 8px;
	.shadow64();
}

.Modal-header h3 {
	font-weight: bold;
}

.Modal-content {
	border-radius: 8px;
}

.backdrop {
	background-color: fade(#000, 30%);
}

.IndexPage>.container {
	margin-top: 16px;
}

.LoadingIndicator {
	animation: none;
	border: none;
	border-radius: 0;
	background-color: currentColor;
	--animation-image: url("data:image/svg+xml,%3Csvg viewBox='5.963 5.963 21.940666 21.940666' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:svg='http://www.w3.org/2000/svg'%3E%3Cg id='layer1'%3E%3Ccircle cx='16.933332' cy='16.933332' r='9.4701843' stroke='%23000' stroke-width='3' fill='none' stroke-dashoffset='' stroke-linecap='round' id='circlebar' stroke-dasharray='1 100'%3E %3CanimateTransform attributeName='transform' attributeType='AUTO' type='rotate' values='0 16.933332 16.933332;450 16.933332 16.933332;1080 16.933332 16.933332' dur='2s' repeatCount='indefinite' /%3E %3Canimate attributeName='stroke-dasharray' attributeType='AUTO' type='rotate' values='0.01 100;30 100;0.01 100' dur='2s' repeatCount='indefinite' /%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
	-webkit-mask: var(--animation-image);
	mask: var(--animation-image);
	transform: rotate(-95deg);
}

#header input[type=search] {
	font-size: 14px;
	border-color: transparent;
	& when (@config-colored-header = false) {
		& when (@config-dark-mode = false) {
			background: padding-box linear-gradient(var(--control-bg), var(--control-bg)), border-box linear-gradient(#ddd ~"calc(100% - 2px)", #9a9a9a ~"calc(100% - 2px)", #9a9a9a);
			&:focus {
				background: padding-box linear-gradient(var(--control-bg), var(--control-bg)), border-box linear-gradient(#ddd ~"calc(100% - 2px)", @primary-color ~"calc(100% - 2px)", @primary-color);
			}
		}
		& when (@config-dark-mode =true) {
			background: padding-box linear-gradient(var(--control-bg), var(--control-bg)), border-box linear-gradient(#303030 ~"calc(100% - 2px)", #9a9a9a ~"calc(100% - 2px)", #9a9a9a);
			&:focus {
				background: padding-box linear-gradient(var(--control-bg), var(--control-bg)), border-box linear-gradient(#303030 ~"calc(100% - 2px)", @primary-color ~"calc(100% - 2px)", @primary-color);
			}
		}
	}
	& when (@config-colored-header = true) {
		box-shadow: 0px 0.3px ~"rgb(111 111 111 / 60%)";
		@media (min-width: 768px) and (max-width: 991.98px) {
			& {
				background: var(--header-colored-control-bg, rgba(0,0,0,0.1));
			}
		}
	}
}

#header .Search-input::before, .FormControl::-webkit-input-placeholder, .FormControl::placeholder {
	& when (@config-colored-header = false) {
		& when (@config-dark-mode = false) {
			color: rgb(117, 117, 117) !important;
		}
		& when (@config-dark-mode = true) {
			color: #cfd1d2 !important;
		}
	}
}

.FormControl:not(textarea, .Form--centered, .FormControl[type=text], .Form--centered .FormControl[type=email], .Form--centered .FormControl[type=password], .ComposerBody-header h3 input, #header input[type=search]) {
	border: 1px solid transparent;

	& when (@config-dark-mode =false) {
		background: padding-box linear-gradient(var(--control-bg), var(--control-bg)), border-box linear-gradient(#ddd ~"calc(100% - 1px)", #9a9a9a ~"calc(100% - 1px)", #9a9a9a);
	}

	& when (@config-dark-mode =true) {
		background: padding-box linear-gradient(var(--control-bg), var(--control-bg)), border-box linear-gradient(#303030 ~"calc(100% - 1px)", #9a9a9a ~"calc(100% - 1px)", #9a9a9a);
	}
}

.FormControl:not(textarea, .Form--centered, .FormControl[type=text], .Form--centered .FormControl[type=email], .Form--centered .FormControl[type=password], .ComposerBody-header h3 input, #header input[type=search]):focus {
	& when (@config-dark-mode =false) {
		background: padding-box linear-gradient(var(--body-bg), var(--body-bg)), border-box linear-gradient(#ddd ~"calc(100% - 1px)", var(--primary-color) ~"calc(100% - 1px)", var(--primary-color))
	}

	& when (@config-dark-mode =true) {
		background: padding-box linear-gradient(var(--body-bg), var(--body-bg)), border-box linear-gradient(#303030 ~"calc(100% - 1px)", var(--primary-color) ~"calc(100% - 1px)", var(--primary-color))
	}
}

.Form--centered .FormControl[type=text],
.Form--centered .FormControl[type=email],
.Form--centered .FormControl[type=password] {
	border-radius: 4px;
	border: 2px solid transparent;
	background: padding-box linear-gradient(var(--body-bg), var(--body-bg)), border-box linear-gradient(fade(#999, 20%) ~"calc(100% - 2px)", #999 ~"calc(100% - 2px)", #999);
}

.Form--centered .FormControl[type=text]:focus,
.Form--centered .FormControl[type=email]:focus,
.Form--centered .FormControl[type=password]:focus {
	background: padding-box linear-gradient(var(--body-bg), var(--body-bg)), border-box linear-gradient(fade(#999, 20%) ~"calc(100% - 2px)", var(--primary-color) ~"calc(100% - 2px)", var(--primary-color)) !important;
}

.Checkbox--switch .Checkbox-display {
	width: 40px;
	height: 20px;
	border: @Fluent-border 1px solid;
	border-radius: 20px;
	margin-top: 0px;
}

.Checkbox--switch .Checkbox-display:before {
	background: padding-box linear-gradient(white, white);
	width: 20px;
	height: 20px;
	border: 5px solid transparent;
	box-shadow: none;
	top: 0px;
	left: 0px;
	margin: -0.5px;
	transition-property: background-color, border;
}

.on.Checkbox--switch .Checkbox-display {
	background: var(--primary-color);
	border: var(--primary-color) 1px solid;
}

.on.Checkbox--switch .Checkbox-display:before {
	left: 20px;
}

.AfruxWidgets-Widget-content {
	.shadow2();
}

.Alert {
	font-size: 14px;
}

.AlertManager .Alert {
	.shadow28();
}

.Composer {
	.shadow64();
	border-radius: 8px 8px 0 0;
}

.ComposerBody-loading {
	border-radius: 8px;
}

.DiscussionListItem {
	margin: 12px 8px;
    border: 1px solid @Fluent-border;
    border-radius: 4px;
    background-color: @obj-color;
	.DiscussionList:not(.DiscussionList--searchResults) & .read .DiscussionListItem-title {
		color: @obj-title-color;
	}
	& .DiscussionListItem-info, & .DiscussionListItem-count {
		color: @details-second-font-color;
	}
}

aside.DiscussionPage-list .DiscussionListItem {
	margin: 12px 8px;
	border-radius: 4px;
}

.tooltip {
	& when (@config-dark-mode =false) {
		--low-elevation-ramp: 0px calc(0.5 * @elevation-height) calc(1 * @elevation-height) fade(#000, 14%);
	}

	& when (@config-dark-mode =true) {
		--low-elevation-ramp: 0px calc(0.5 * @elevation-height) calc(1 * @elevation-height) fade(#000, 28%);
	}

	@elevation-height: 4px;
	filter: drop-shadow(var(--low-elevation-ramp));
}

.tooltip .tooltip-arrow {
	& when (@config-dark-mode = false) {
		color: black !important;
	}
}

.tooltip.top .tooltip-arrow {
	border-top-color: @layer-2-color !important;
}

.tooltip.bottom .tooltip-arrow {
	border-bottom-color: @layer-2-color !important;
}

.tooltip.left .tooltip-arrow {
	border-left-color: @layer-2-color !important;
}

.tooltip.right .tooltip-arrow {
	border-right-color: @layer-2-color !important;
}

.tooltip>.tooltip-inner {
	& when (@config-dark-mode = false) {
		color: black !important;
	}
	background-color: @layer-2-color !important;
}

.Badge:not(.Badge--social) {
	.shadow4();
}

.disabled .Scrubber-bar {
	filter: grayscale(1);
}

.Scrubber-bar {
	& when (@config-dark-mode =false) {
		border: 5px solid #fff;
	}

	& when (@config-dark-mode =true) {
		border: 5px solid #454545;
	}

	width: 20px;
	height: 20px;
	border-radius: 50%;
	margin-left: -9px;
	transition: border-width 0.1s;
	box-shadow: 0 0 0 1px @Fluent-border;

	&:not(.disabled .Scrubber-bar) {
		.shadow4();
	}
}

.Scrubber-handle {
	display: flex;
	align-items: center;

	&:hover>.Scrubber-bar:not(.disabled .Scrubber-bar) {
		border-width: 4px;
	}

	&:active>.Scrubber-bar:not(.disabled .Scrubber-bar) {
		border-width: 6px;
	}
}

@media (max-width: 767.98px) {
	.DiscussionListItem.Slidable .Slidable-underneath {
		border-radius: 0 4px 4px 0;
		background: @layer-2-color !important;
	}

	.dropdown-backdrop, .drawer-backdrop {
		background-color: fade(#000, 30%);
	}

	.Dropdown .Dropdown-menu {
		.shadow28();
	}
	@media (display-mode: window-controls-overlay) {
		#app-navigation, .Modal .App-titleControl, .Composer:not(.minimized):before, .ModalManager:before {
			app-region: drag;

			& button, & a {
				app-region: no-drag;
			}
		}

		.App-titleControl>.Button>*, .App-primaryControl>.Button, #home-link, .App-backControl>.Button, .normal .ComposerBody-header>li:first-child h3 {
				app-region: no-drag;
		}

		.App, .Composer:not(.minimized) {
			padding-top: ~"max(env(titlebar-area-height), var(--header-height-phone))";
		}

		.App-navigation, .App-primaryControl>.Button, .App-titleControl>.Button, .App-backControl>.Button, .Composer:not(.minimized):before, .ModalManager:before {
			height: ~"max(env(titlebar-area-height), var(--header-height-phone))";
		}

		.App-titleControl {
			left: 0;
		}

		.Composer:not(.minimized) .Composer-controls .item-minimize, .App.affix .App-backControl {
			margin-left: ~"env(titlebar-area-x)";
		}

		.Modal .App-backControl {
			margin-left: ~"env(titlebar-area-x)" !important;
		}

		.normal .ComposerBody-header>li:first-child, .App.affix .App-titleControl, .Modal .App-titleControl {
			margin-left: ~"calc(46px + env(titlebar-area-x))";
    		width: ~"calc(env(titlebar-area-width) - (46px * 2))";
			margin-right: ~"calc(100% - env(titlebar-area-x) - env(titlebar-area-width) + 46px)";
		}

		.ComposerBody-editor .TextEditor-controls .item-submit, .App.affix .App-primaryControl {
			margin-right: ~"calc(100% - env(titlebar-area-x) - env(titlebar-area-width))" !important;
		}
	}
}

@media (min-width:768px) {
	.Composer.active:not(.fullScreen) {
		.shadow64();
	}

	li.TagTile {
		margin: 6px;
		border-radius: 8px !important;
		width: ~"calc(33.333% - 12px)";
		.shadow4();
	}

	nav.IndexPage-nav.sideNav,
	nav.UserPage-nav.sideNav {
		margin-right: 16px;
	}

	.sideNav .Dropdown--select .Dropdown-menu>li>a {
		color: --obj-title-color;
	}

	.DiscussionListItem {
		margin: 12px 0;
	}

	.Dropdown-menu span.Button-label {
		font-size: 14px;
	}

	@media (max-width: 991.98px) {
		nav.IndexPage-nav.sideNav {
			padding: 16px;
			border-radius: 8px;
			border: 1px solid var(--control-bg);
			margin-right: 0;
			.shadow16();
		}

		.sideNav:after {
			display: none;
		}
	}

	.item-nav>div>ul>li {
		margin: 8px 0;
		padding: 0 8px;
		border-radius: 4px;
	}

	.item-nav>div>ul>li:hover,
	.item-nav>div>ul>li.active {
		background-color: fade(#999, 13%);
	}

	.item-nav>div>ul>li.active::before {
		content: '';
		width: 4px;
		height: 17px;
		background: var(--primary-color);
		border-radius: 2px;
		float: left;
		margin: 9px -28px 0 -8px;
	}

	.item-nav>div>ul>li:active {
		background-color: fade(#999, 20%);
	}

	.item-nav>div>ul>li.active~li.active::before {
		margin: 9px -28px 0 0;
	}

	.item-nav>div>ul>li.active:has(~ li.active) {
		background-color: transparent;
	}

	.item-nav>div>ul>li.active:has(~ li.active)::before {
		display: none;
	}

	@media (display-mode: window-controls-overlay) {
		#header {
			app-region: drag;
			& a, & button, & input {
				app-region: no-drag;
			}
		}

		.App, .App-header {
			--header-height: ~"calc(60px + env(titlebar-area-height))";
			& .Header-title {
				margin-bottom: 4px;
			}
		}
		
		#header-primary {
			clear: left;
		}

		#header-secondary .item-search {
			position: fixed;
			top: 8px;
			left: 33.33%;
			width: 33.33%;
			z-index: 10;
			& input.FormControl {
				width: 100%;
			}
			&>.Search-results {
				left: 0;
				right: 0;
			}
		}

		.Search.focused {
			margin-left: 0;
		}
	}
}

@media (min-width: 992px) {
	.IndexPage-results.sideNavOffset,
	.UserPage-content.sideNavOffset {
		padding-left: 16px;
		border-left: 1px solid @Fluent-border;
	}

	.Composer {
		border-width: 1px 1px 0 1px;
		border-color: @Fluent-border;
		border-style: solid;
	}
}